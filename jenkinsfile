pipeline {
    agent any
    tools {
        nodejs 'Nodejs22-6-0'
    }
    environment {
        SONAR_SCANNER_HOME = tool 'SonarQube_scaner';
    }

    stages {
        stage('installing dependencies') {
            steps {
                sh 'npm install --no-audit'
            }
        }
        
        stage('npm-dependency_parallel') {
            parallel {
                stage('npm dependency check') {
                    steps {
                        sh 'npm audit --audit-level=critical'
                    }
                }

                // Uncomment if you need OWASP Dependency Check
                /* stage('OWASP Dependency Check') {
                    steps {
                        dependencyCheck additionalArguments: '''--format ALL
                        --scan ./
                        --prettyPrint''', odcInstallation: 'OWASP'
                    }
                } */
            } // âœ… Closing parallel block correctly
        }

        stage('Code Coverage') {
            steps {
                catchError(buildResult: 'SUCCESS', message: 'Oops! We will fix it later', stageResult: 'UNSTABLE') {
                    sh 'npm run coverage'
                }
                publishHTML([
                    allowMissing: true, 
                    alwaysLinkToLastBuild: true, 
                    keepAll: true, 
                    reportDir: 'coverage/lcov-report', 
                    reportFiles: 'index.html', 
                    reportName: 'Code Coverage Report', 
                    reportTitles: '', 
                    useWrapperFileDirectly: true
                ])
            }
        }

    /*    stage('SonarQube Static Analysis') {
            steps {
                withSonarQubeEnv('Sonar') {
                    sh '''
                    /var/lib/jenkins/tools/hudson.plugins.sonar.SonarRunnerInstallation/SonarQube_scaner/bin/sonar-scanner \
                        -Dsonar.projectKey=solar-sonar \
                        -Dsonar.sources=. \
                        -Dsonar.javascript.lcov.reportPaths=./coverage/lcov.info \
                        -Dsonar.issuesReport.console.enable=true
                    '''
                }
            }
        }
        */
        stage('Docker image bulid') {
            steps {
                sh '''
                docker build -t solar:latest .
                docker tag solar:latest
                '''

            }
        }

        stage('Test') {
            steps {
                echo 'Testing the app'
            }
        }

        stage('Deploy') {
            steps {
                echo 'Deploying the app'
            }
        }
    }
}
